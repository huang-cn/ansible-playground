---
- name: Validating Investigation Token
  hosts: ws_host
  gather_facts: no
  #vars:
    #- WH_TOKEN: eyJhbGciOiJSUzI1NiIsImtpZCI6ImZLQW9adThpMURaSHNGMkU4WW41OFNrWFlfZVdlYzJZWnlHZUw4UjNOTVEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ3YXNhdXRvbWF0aW9uIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6IndzYS1oZWFsdGgtd2ViaG9va3MtYXBpcy1zYS10b2tlbi1xN252NCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ3c2EtaGVhbHRoLXdlYmhvb2tzLWFwaXMtc2EiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI3ODgzNjA1Yi1hY2Q0LTQyMzItOTMxNi1iYjlhZGMzY2NiOTMiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6d2FzYXV0b21hdGlvbjp3c2EtaGVhbHRoLXdlYmhvb2tzLWFwaXMtc2EifQ.G8RNtlo5TuLPab_vOnawoHWEPzEKjkEhLxI-FjcPI5ZItIgMG69My3T2b5VyfLy1xiwakUylBIGvOUnmjj2EhNT_HHzT8w8_x5OYY6aQNMZIQs9SFQ3xiQujbwsigjNqiivDfulrWMgw5Ac0LyAhYLDdCW9mKetqJzAZ2ziUGpFbWpNZhlZdct3WgOeNe3bK-t7Zw3SsNygjQbHEoVGxab83j1vdTkY5kdFJzDrXqMwAHtPsMp6bzO6DuhLJy_kw9DGCY6QVVgv2HgjRRMeqLND6EXkvpxyVM6n2gmH_x67IE5rsl_We-01yvPpM1YGVqxasOuShoditbwHiK3PIouT0lU9ILVCY5aBu6jPhGWEsj_BJFxVeOqLo6dLuT1MOUAjGOlul_VWQDVKjTzyxzaiz0KR_0go4HvQMl-RWwvRmraJJW5o7aENKkIpQdcMtX3NO5uv0NZxc3bTn9FWMPPvdOFOpc96UyYMHMIrOFdqDo4pynY1YLufKf-QZsnNpEQSj2HrQsusjb_0XNyW-DFS_YfFPNNcgeC0iNFtJtpHpTP_pN_lOSpsaba1tCsptyKzFxChlQqRpSEGFqRLlE-ScAKVtRBcR51J3g-2KR69WpIs1kIc9iwJPAl9Y8BogrD2eeFHdHNYUGOM4VjnNeEs_FO7FWd7dX9klxCBqigg
  tasks:
    - set_fact: HEAPFILE_LOCATION=/usr/share/nginx/html/wsa-heapdump
    - set_fact: HEAPFILE_URL=http://chukkar1.fyre.ibm.com/wsa-heapdump
    - set_fact: MEMLEAK_URL=https://cpd-wasautomation.apps.don-wsa-130rc3.cp.fyre.ibm.com/websphereauto/health/webhooks/instana/memleak
    - set_fact: INVESTIGATION_URL=https://wsa-health-apis-wasautomation.apps.don-wsa-130rc3.cp.fyre.ibm.com/investigations
    - set_fact: APPLICATION_SERVER_FQDN=testapp.wsatest.svc.cluster.local
    - set_fact: CUSTOM_PID=34
    - set_fact: WH_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6InlwVUNyMjVyU1NiQmdYWjR1Wk81S3gycW5MaDlhV3VGVE9DTGFaVmJzaGMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ3YXNhdXRvbWF0aW9uIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6IndzYS1oZWFsdGgtd2ViaG9va3MtYXBpcy1zYS10b2tlbi1xaHN0NiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ3c2EtaGVhbHRoLXdlYmhvb2tzLWFwaXMtc2EiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI2Y2Q3N2FjNS00MTI0LTQ2NWItYTkwMy00ZmZjNTliMjc5MDIiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6d2FzYXV0b21hdGlvbjp3c2EtaGVhbHRoLXdlYmhvb2tzLWFwaXMtc2EifQ.ez5TH1PjM_z-GT31KiA1evKBl8WUFXJ5lEiT_7uDSVv_YdgNrlg4a9NJEL-dRmkqWZVsaomHJQi1xykgA5ROxZ9z7OQBy3tDGyzZkRJPFLUofibePFztuerXoCb-N2npAGixVoja6LaByOLrQ1VuiJdSYBPDxZuztCuUsqMzfKAlghx0DJJbG0grvQWYYKrFGKb1_H8o1DdVyv05KYLa8WQtP9wzBwbxhT-rnZp4TSpoEV0feEsVOsEafpY-oTvc0sVfrQ01bgLT2mRLrHV4V1OXlDDui0rb9hFkpB7-Mk_Q32VbB1EXi4qxFk5brmVijncpj62Vg8sT21aBLP_juIcEnW_G2IqCI5Vz01TVchlt_RzkVQj6k4kYSwyiQMOMEb3ZcfrxQjoqnNgw95XZXWLddcID-ilb261TGDuVxlDuMviKRgbXd5VqJTow4O-F7wuifMuj4ug2h9ZJ1jGdoY8Zf2AwLqKSbVrOCnBY3h5EURhjkVLb52MNXVovcTDsuDdpso0yadwn3gEHzFl5WNWwEnqoUgH9dfxwhrLLrHr06t9ms3-cIMHln6yPeLt0x3GTPWGwA6BYNituZjVn83Q9PtnR5Na_dGbRlL00PRRvZJpPkJDlRcrHtGMK85lA_NBCiIrSMOeYX8cJBQGtsss8u-WaE-E73_C3Y5PAtog
    - name: query investigation URL 
      shell: |
        curl -v -k -f -H "Content-Type: application/json" \
          -H "Authorization: Bearer {{ IV_TOKEN }}" \
          {{ INVESTIGATION_URL }}
      args:
        executable: /bin/bash
      register: iv_output
      failed_when: iv_output.rc != 0

- name: Websphere Heap Dump 
  hosts: ws_host
  gather_facts: no
  tasks:
    - name: create ticket 
      shell: |
        curl -v -k -f -H "Content-Type: application/json" \
          -H "Authorization: Bearer {{ WH_TOKEN }}" \
          -d '{"issue": { "type": "issue", "state": "OPEN", "id":"'{{ APPLICATION_SERVER_FQDN }}'", "link": "https://ibm.com", "customPayloads": { "custom:PID": ["'{{ CUSTOM_PID }}'"] }, "fqdn":"'{{ APPLICATION_SERVER_FQDN }}'" } }' \
          {{ MEMLEAK_URL }}
      args:
        executable: /bin/bash

- name: get-investigation-id 
  hosts: ws_host
  gather_facts: no
  tasks:
    - name: get iv_id
      shell: |
        sleep 5
        iv_id=$(curl -v -k -f -H "Content-Type: application/json" \
          -H "Authorization: Bearer {{ IV_TOKEN }}" \
          {{ INVESTIGATION_URL }} | jq '.results[0].id')
        echo $iv_id | tr -d '"'
      register: output
      args:
        executable: /bin/bash
    - set_fact: IV_ID="{{ output.stdout }}"

- name: get-result 
  hosts: ws_host
  gather_facts: no
  tasks:
    - name: get summaries
      shell: |
        wait_time=300
        count=0
        while [[ $summaries != *"class"* ]] && (( count <= wait_time )); do
          summaries=$(curl -v -k -H "Content-Type: application/json" \
            -H "Authorization: Bearer {{ IV_TOKEN }}" \
            {{ INVESTIGATION_URL }}/{{ IV_ID }}/steps | jq '.[2].summaries')
          files_info=$(curl -v -k -H "Content-Type: application/json" \
            -H "Authorization: Bearer {{ IV_TOKEN }}" \
            {{ INVESTIGATION_URL }}/{{ IV_ID }}/steps | jq '.[2].files')
          sleep 1
          (( count=count+1 ))
        done
        if (( count > wait_time )); then 
          echo "failed to get summary"
          exit 1
        else
          echo "Websphere Memory leak investigation Summaries:\n\n"
          echo $summaries | tr -d '"'
          echo $files_info | tr -d '"'
        fi
      register: sumoutput
      args:
        executable: /bin/bash

    - name: Display Summaries
      ansible.builtin.debug:
        msg: "{{ sumoutput.stdout }}"

    - name: Get result file 
      shell: |
        step_id=$(curl -v -k -H "Content-Type: application/json" \
            -H "Authorization: Bearer {{ IV_TOKEN }}" \
            {{ INVESTIGATION_URL }}/{{ IV_ID }}/steps | jq '.[2].id' | tr -d '"')
        file_name=$(curl -v -k -H "Content-Type: application/json" \
            -H "Authorization: Bearer {{ IV_TOKEN }}" \
            {{ INVESTIGATION_URL }}/{{ IV_ID }}/steps | jq '.[2].files[0].fileName' | tr -d '"')
        curl -o {{ HEAPFILE_LOCATION }}/$file_name -v -k -H "Content-Type: application/json" \
            -H "Authorization: Bearer {{ IV_TOKEN }}" \
            {{ INVESTIGATION_URL }}/{{ IV_ID }}/steps/${step_id}/files/$file_name > /dev/null
        echo $file_name
      register: filename_output
      args:
        executable: /bin/bash
    - set_fact: IV_FILENAME="{{ filename_output.stdout }}"
    - set_fact: GIT_MSG="{{ sumoutput.stdout + '\\n\\n' + 'Download full analysis file:' + ' '+ HEAPFILE_URL + '/' + IV_FILENAME }}"

    - name: Open Github issue 
      shell: "/demo/crt_git_issue.sh \"{{ GIT_MSG }}\" > /dev/null"
      register: output
      failed_when: output.rc != 0
